package tech.quantit.northstar.strategy.api.indicator;

import static org.assertj.core.api.Assertions.assertThat;
import static org.assertj.core.api.Assertions.offset;

import org.junit.jupiter.api.Test;

import xyz.redtorch.pb.CoreField.BarField;

class BollTest {
	String symbol = "rb2205";
	
	// 数据来源于RB2205在22年1月19日（包含18日夜盘）的一分钟数据
	double[] sample = new double[] {
			4632,4633,4638,4636,4632,4640,4637,4643,4649,4655,4660,4664,4672,4676,4676,4672,4669,4674,4668,4669,4671,4675,4679,4678,4679,4686,4683,4683,4680,4678,4684,4684,4684,4686,4687,4692,4693,4696,4702,4702,4697,4699,4697,4697,4699,4694,4698,4697,4695,4697,4694,4694,4692,4691,4694,4697,4698,4699,4702,4704,4696,4701,4704,4702,4704,4702,4704,4705,4701,4703,4706,4706,4706,4709,4712,4714,4717,4715,4718,4722,4722,4720,4720,4723,4719,4720,4721,4721,4721,4718,4723,4727,4731,4728,4726,4725,4723,4723,4723,4730,4731,4731,4730,4734,4733,4732,4734,4735,4735,4729,4733,4730,4725,4728,4720,4719,4716,4712,4711,4716,4713,4715,4714,4709,4705,4714,4720,4716,4717,4715,4716,4712,4709,4708,4712,4714,4721,4721,4719,4723,4729,4730,4738,4737,4737,4727,4730,4730,4725,4730,4732,4731,4731,4736,4733,4735,4735,4738,4733,4738,4737,4738,4733,4732,4737,4740,4737,4736,4738,4733,4735,4734,4734,4733,4732,4730,4726,4729,4725,4729,4721,4720,4717,4720,4722,4723,4725,4725,4725,4725,4720,4719,4718,4722,4724,4726,4719,4720,4719,4716,4719,4722,4722,4721,4721,4721,4717,4720,4717,4713,4715,4715,4715,4714,4713,4712,4711,4709,4708,4712,4715,4715,4716,4720,4718,4716,4719,4718,4718,4716,4719,4718,4715,4717,4717,4713,4713,4712,4713,4709,4710,4708,4711,4705,4704,4699,4695,4702,4706,4712,4712,4706,4708,4706,4706,4697,4699,4701,4696,4697,4695,4693,4687,4692,4687,4684,4674,4670,4676,4675,4678,4675,4679,4679,4678,4681,4683,4687,4689,4687,4691,4690,4693,4691,4689,4686,4693,4693,4698,4696,4695,4705,4705,4704,4708,4706,4713,4712,4711,4711,4708,4706,4709,4707,4716,4716,4711,4710,4713,4717,4714,4710,4712,4712,4713,4706,4711,4713,4711,4715,4715,4716,4715,4715,4717,4717,4720,4714,4711,4712,4710,4714,4713,4714,4713,
			4714,4711,4707,4709,4708,4710,4701,4702,4704,4713
	};
	
	double[] upperResults = new double[] {4718.86,4718.81,4719.08,4719.17,4719.31,4719.29,4720.13,4720.83,4721.05,4721.13};
	double[] midResults = new double[] {4713.35,4713.23,4713.12,4713.00,4712.85,4712.73,4712.54,4712.19,4711.85,4711.92};
	double[] lowerResults = new double[] {4707.83,4707.65,4707.15,4706.83,4706.38,4706.17,4704.94,4703.56,4702.64,4702.72};

	@Test
	void test() {
		MultiValueIndicator boll = new Boll(symbol,26,2);
		for (int i = 0; i < sample.length; i++) {
			boll.onBar(BarField.newBuilder().setUnifiedSymbol(symbol).setClosePrice(sample[i]).build());
		}
		
		for(int i=0; i < 10; i++) {
			System.out.println(i);
			assertThat(boll.value(Boll.MID, i)).isCloseTo(midResults[9-i], offset(1e-2));
			assertThat(boll.value(Boll.UPPER, i)).isCloseTo(upperResults[9-i], offset(1e-2));
			assertThat(boll.value(Boll.LOWER, i)).isCloseTo(lowerResults[9-i], offset(1e-2));
		}
	}

}
